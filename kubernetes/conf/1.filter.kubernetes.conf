<filter kubernetes.**>
  @type parser
  key_name log
  #emit_invalid_record_to_error false
  <parse>
    @type multi_format
    <pattern>
      # Nginx Access Log Format:
      # log_format main '[$time_local] '
      #                 'remote_addr=$remote_addr '
      #                 'https=$https '
      #                 'host=$host '
      #                 'request="$request" '
      #                 'content_length=$content_length '
      #                 'request_id=$request_id '
      #                 'request_time=$request_time '
      #                 'referer=$http_referer '
      #                 'user_agent="$http_user_agent" '
      #                 'x_forwarded_for="$http_x_forwarded_for" '
      #                 'status=$status '
      #                 'bytes_sent=$bytes_sent '
      #                 'body_bytes_sent=$body_bytes_sent '
      #                 'upstream_addr=$upstream_addr '
      #                 'upstream_status=$upstream_status '
      #                 'upstream_response_time=$upstream_response_time '
      #                 'upstream_connect_time=$upstream_connect_time '
      #                 'upstream_header_time=$upstream_header_time';
      # Example:
      # remote_addr=10.244.0.1 https= host=10.244.0.170 request="GET /lvsheartbeat/heartbeat.gif HTTP/1.1" content_length=- request_id=b069864f2b9b4b8ecd45f6280ac31a20 request_time=0.001 referer=- user_agent="kube-probe/1.13" x_forwarded_for="-" status=200 bytes_sent=318 body_bytes_sent=35 upstream_addr=10.99.158.207:80 upstream_status=200 upstream_response_time=0.004 upstream_connect_time=0.000 upstream_header_time=0.004
      format /^\[(?<time>[^\]]+)\] remote_addr=(?<remote_addr>[^\s]+) https=(?<https>\w*) host=(?<host>[^\s]+) request="(?<method>\w+) (?<path>[^\s]+) (?<proto>[^\s]+)" content_length=(?<content_length>(\d+|-)) request_id=(?<request_id>[^\s]+) request_time=(?<request_time>(\d|\.)+) referer=(?<referer>[^\s]+) user_agent="(?<user_agent>[^"]+)" x_forwarded_for="(?<x_forwarded_for>[^"]+)" status=(?<status>\d{3}) bytes_sent=(?<bytes_sent>\d+) body_bytes_sent=(?<body_bytes_sent>\d+) upstream_addr=(?<upstream_addr>[^\s]+) upstream_status=(?<upstream_status>(\d{3}|-)) upstream_response_time=(?<upstream_response_time>((\d|\.)+|-)) upstream_connect_time=(?<upstream_connect_time>((\d|\.)+|-)) upstream_header_time=(?<upstream_header_time>((\d|\.)+|-))$/
      types content_length:integer,request_time:float,status:integer,bytes_sent:integer,body_bytes_sent:integer,upstream_status:integer,upstream_response_time:float,upstream_connect_time:float,upstream_header_time:float
      time_format %d/%b/%Y:%H:%M:%S %z
    </pattern>
    <pattern>
      # Nginx Error Log Example
      format /^(?<time>\d{4}/\d{2}/\d{2} \d{2}:\d{2}:\d{2}) \[(?<log_level>\w+)\] (?<pid>\d+).(?<tid>\d+): (?<message>.*)/
      types pid:integer,tid:integer
      time_format %Y/%m/%d %H:%M:%S
    </pattern>
    <pattern>
      format json
      time_key time
      time_format %Y/%m/%d %H:%M:%S.%L %Z
    </pattern>
    <pattern>
      format none
    </pattern>
  </parse>
</filter>

# Enriches records with Kubernetes metadata
<filter kubernetes.**>
  @type kubernetes_metadata
</filter>